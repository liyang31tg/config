# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.

# 插件目录 .local/share/zsh/plugins
# 插件开始
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
PLUGINS_PATH=$HOME/.local/share/zsh/plugins
source ${PLUGINS_PATH}/powerlevel10k/powerlevel10k.zsh-theme
source ${PLUGINS_PATH}/zsh-autosuggestions/zsh-autosuggestions.zsh
# do this in terminal when fzf-tab not working
autoload -U compinit
compinit
source ${PLUGINS_PATH}/fzf-tab/fzf-tab.plugin.zsh
source $HOME/.config/zsh/fzf-tab.sh # 针对fzf-tab一些独立的配置
[ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh


source ${PLUGINS_PATH}/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh #命令高亮
# brew install autojump 这个插件不需要注入到这个文件里
# 插件end

export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/go/bin
GOPATH="$HOME/go"
export PATH="$PATH:/usr/local/mysql/bin"
export GO111MODULE=on
export GOPROXY="https://goproxy.cn"
export LC_ALL=en_US.UTF-8
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-18.0.1.1.jdk/Contents/Home
export PATH="$PATH:$HOME/.rvm/bin"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="$HOME/bun/bin:$PATH"

function fg() {
  if [[ $# -eq 1 && $1 = - ]]; then
		builtin fg %-
	else
	  builtin fg %"$@"
	fi
}


# alias start
alias vi=nvim
alias vim=nvim
alias neococos="nvim --listen 127.0.0.1:6553"
# alias ls="ls --color=auto"
alias r="source $HOME/.zshrc"
alias d="kitty +kitten diff"
alias w="cd ~/go/workSpace"
alias c="cd ~/.config"
alias g="gitui"
alias uf="cd ~/go/workSpace/jinguf && nvim"
alias hy="cd ~/go/workSpace/jinghy && nvim"
alias dot=dotnet
# alias end
# 命令替换start
# https://github.com/sigoden/aichat #ai工具
eval "$(zoxide init zsh)"
# alias cd="z" #z is zoxide
alias ls="lsd"
alias ll="ls -lah"
alias du="dust"
alias top="btm" #brew install bottom
alias cat="bat --color never"
alias grep="rg"
alias diff="delta"
# alias sed="sd"
alias df="duf"
alias t="tldr" #brew install tealdeer #命令的常用语法
alias ps="procs"
alias find="fd"
alias s="neofetch"
# 命令替换end
#

function ip(){
  curl cip.cc
}




function lg() {
	export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir
	lazygit "$@"
	if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
		cd "$(cat $LAZYGIT_NEW_DIR_FILE)"
		rm -f $LAZYGIT_NEW_DIR_FILE >/dev/null
	fi
}

#function ssh() {
#c=$(curl -s cip.cc | grep 成都 | wc -l)
#if [ $c -gt 0 ];then
#echo "请先开启代理"
#return
#fi
#/usr/bin/ssh $1
#}

LC_ALL=zh_CN.UTF-8
HOMEBREW_BOTTLE_DOMAIN=
export PATH="$PATH:$HOME/Library/Android/sdk/build-tools/30.0.3"
export PATH="$PATH:$HOME/Library/Android/sdk/platform-tools:/usr/local/bin"
fd1() {
	local dir
	dir=$(find ${1:-.} -path '*/\.*' -prune \
		-o -type d -print 2>/dev/null | fzf +m) &&
		cd "$dir"
}

export LC_ALL=zh_CN.UTF-8
export LANG=zh_CN.UTF-8
export DENO_INSTALL="/Users/mac/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

# pnpm
export PNPM_HOME="$HOME/.pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end
# export PATH="$PATH:/Users/mac/.dotnet/tools"
# kitty start
alias icat="kitty +kitten icat"
alias d="kitty +kitten diff"
alias ts=ts-node
alias tr="ts-node-dev  -r tsconfig-paths/register  --respawn --transpile-only" #tsconfig-paths/register 是为了解决tsconfig-paths的问题
alias pn="pnpm"
# kitty end
#

export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,dist,vendor} --type f"
export FZF_DEFAULT_OPTS='--color=bg+:#3c3836,bg:#32302f,spinner:#fb4934,hl:#928374,fg:#ebdbb2,header:#928374,info:#8ec07c,pointer:#fb4934,marker:#fb4934,fg+:#ebdbb2,prompt:#fb4934,hl+:#fb4934'

export TZ='Asia/Bangkok'

alias ts="ts-node-dev --respawn "
if [[ -e $HOME/.zshrc_local ]]; then
	source $HOME/.zshrc_local
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# enable-fzf-tab


# zellij start
# 自动启动zellij
# eval "$(zellij setup --generate-auto-start zsh)"
#
#打开默认
function zz() {
	 zellij attach -c default
}

#会话列表
function zl(){
    zellij list-sessions
}

#指定名字创建一个会话
function zc(){
     session_name=$1
     if [ -z ${session_name} ];then
       echo "必须指定一个会话名字"
       return
     fi
	 zellij attach -c ${session_name}
}

#链接一个现有的会话,大于2个选择，只有一个默认打开，一个都没有就打开default
function za(){
    zellij da -y
    ZJ_SESSIONS=$(zellij list-sessions | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g")
    NO_SESSIONS=$(echo "${ZJ_SESSIONS}" | wc -l)
    if [ "${NO_SESSIONS}" -ge 2 ]; then
      zellij attach \
      "$(echo "${ZJ_SESSIONS}" | sk | awk '{print $1}')"
    elif [ "${NO_SESSIONS}" -eq 1 ]; then
      zellij attach -c
    else
      zellij attach -c default
    fi
}
# zellij end
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
export useryy=12 #这是一个标识，表示只在本机

neofetch


# bun completions
[ -s "/Users/mac/.bun/_bun" ] && source "/Users/mac/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"


export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
